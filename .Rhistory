"",
envir = .GlobalEnv
)
}
bedcount <<- number_of_beds
}
else {
for (i in (bed_count + 1):(bed_count+number_of_beds)) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)
}
bedcount <<- bedcount + number_of_beds}
}
add_beds(100)
add_plant("tomato", 80, 50)
add_plant("eggplant", 100, 50)
add_plant("squash", 67, 50)
add_plant("squash", 67, 50)
bedcount
add_plant <- function (plant_name, daystoharvest, harvestlength) {
stringer_bell = toString(plant_name)
assign(stringer_bell,
c("Plant",
rep("Maintain",ceiling(daystoharvest/7)),
rep("Harvest", ceiling(harvestlength/7)),
"Rip Out"
),
envir = .GlobalEnv)
if (exists("plants")) {
if (!(is.element(stringer_bell, plants))) {
plants <<- c(plants, plant_name)
}
}
else {
plants <<- c(stringer_bell)
}
}
add_beds <- function(number_of_beds) {
if (!(exists("bed_count", envir = .GlobalEnv))) {
for (i in 1:number_of_beds) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)
}
bedcount <<- number_of_beds
}
else {
for (i in (bed_count + 1):(bed_count+number_of_beds)) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)}
bedcount <<- bedcount + number_of_beds
}
}
add_beds(100)
add_plant("tomato", 80, 50)
add_plant("eggplant", 100, 50)
add_plant("squash", 67, 50)
add_plant("squash", 67, 50)
bedcount
add_plant <- function (plant_name, daystoharvest, harvestlength) {
stringer_bell = toString(plant_name)
assign(stringer_bell,
c("Plant",
rep("Maintain",ceiling(daystoharvest/7)),
rep("Harvest", ceiling(harvestlength/7)),
"Rip Out"
),
envir = .GlobalEnv)
if (exists("plants")) {
if (!(is.element(stringer_bell, plants))) {
plants <<- c(plants, plant_name)
}
}
else {
plants <<- c(stringer_bell)
}
}
add_beds <- function(number_of_beds) {
if (!(exists("bed_count", envir = .GlobalEnv))) {
for (i in 1:number_of_beds) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)
}
bedcount <<- number_of_beds
}
else {
for (i in (bed_count + 1):(bed_count+number_of_beds)) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)}
bedcount <<- bedcount + number_of_beds
}
}
add_beds(100)
add_plant("tomato", 80, 50)
add_plant("eggplant", 100, 50)
add_plant("squash", 67, 50)
add_plant("squash", 67, 50)
add_beds(20)
exists("bed_count",envir = .GlobalEnv)
bed_count
bedcount
add_plant <- function (plant_name, daystoharvest, harvestlength) {
stringer_bell = toString(plant_name)
assign(stringer_bell,
c("Plant",
rep("Maintain",ceiling(daystoharvest/7)),
rep("Harvest", ceiling(harvestlength/7)),
"Rip Out"
),
envir = .GlobalEnv)
if (exists("plants")) {
if (!(is.element(stringer_bell, plants))) {
plants <<- c(plants, plant_name)
}
}
else {
plants <<- c(stringer_bell)
}
}
add_beds <- function(number_of_beds) {
if (!(exists("bedcount", envir = .GlobalEnv))) {
for (i in 1:number_of_beds) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)
}
bedcount <<- number_of_beds
}
else {
for (i in (bedcount + 1):(bed_count+number_of_beds)) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)}
bedcount <<- bedcount + number_of_beds
}
}
add_beds(100)
add_plant("tomato", 80, 50)
add_plant("eggplant", 100, 50)
add_plant("squash", 67, 50)
add_plant("squash", 67, 50)
add_plant <- function (plant_name, daystoharvest, harvestlength) {
stringer_bell = toString(plant_name)
assign(stringer_bell,
c("Plant",
rep("Maintain",ceiling(daystoharvest/7)),
rep("Harvest", ceiling(harvestlength/7)),
"Rip Out"
),
envir = .GlobalEnv)
if (exists("plants")) {
if (!(is.element(stringer_bell, plants))) {
plants <<- c(plants, plant_name)
}
}
else {
plants <<- c(stringer_bell)
}
}
add_beds <- function(number_of_beds) {
if (!(exists("bedcount", envir = .GlobalEnv))) {
for (i in 1:number_of_beds) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)
}
bedcount <<- number_of_beds
}
else {
for (i in (bedcount + 1):(bedcount+number_of_beds)) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)}
bedcount <<- bedcount + number_of_beds
}
}
add_beds(100)
add_plant("tomato", 80, 50)
add_plant("eggplant", 100, 50)
add_plant("squash", 67, 50)
add_plant("squash", 67, 50)
add_plant <- function (plant_name, daystoharvest, harvestlength) {
stringer_bell = toString(plant_name)
assign(stringer_bell,
c("Plant",
rep("Maintain",ceiling(daystoharvest/7)),
rep("Harvest", ceiling(harvestlength/7)),
"Rip Out"
),
envir = .GlobalEnv)
if (exists("plants")) {
if (!(is.element(stringer_bell, plants))) {
plants <<- c(plants, plant_name)
}
}
else {
plants <<- c(stringer_bell)
}
}
add_beds <- function(number_of_beds) {
if (!(exists("bedcount", envir = .GlobalEnv))) {
for (i in 1:number_of_beds) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)
}
bedcount <<- number_of_beds
}
else {
for (i in (bedcount + 1):(bedcount+number_of_beds)) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)}
bedcount <<- bedcount + number_of_beds
}
}
add_beds(100)
add_plant("tomato", 80, 50)
add_plant("eggplant", 100, 50)
add_plant("squash", 67, 50)
add_plant("squash", 67, 50)
bedcount
add_plant <- function (plant_name, daystoharvest, harvestlength) {
stringer_bell = toString(plant_name)
assign(stringer_bell,
c("Plant",
rep("Maintain",ceiling(daystoharvest/7)),
rep("Harvest", ceiling(harvestlength/7)),
"Rip Out"
),
envir = .GlobalEnv)
if (exists("plants")) {
if (!(is.element(stringer_bell, plants))) {
plants <<- c(plants, plant_name)
}
}
else {
plants <<- c(stringer_bell)
}
}
add_beds <- function(number_of_beds) {
if (!(exists("bedcount", envir = .GlobalEnv))) {
for (i in 1:number_of_beds) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)
}
bedcount <<- number_of_beds
}
else {
for (i in (bedcount + 1):(bedcount+number_of_beds)) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)}
bedcount <<- bedcount + number_of_beds
}
}
add_beds(100)
add_plant("tomato", 80, 50)
add_plant("eggplant", 100, 50)
add_plant("squash", 67, 50)
add_plant("squash", 67, 50)
add_plant <- function (plant_name, daystoharvest, harvestlength) {
stringer_bell = toString(plant_name)
assign(stringer_bell,
c("Plant",
rep("Maintain",ceiling(daystoharvest/7)),
rep("Harvest", ceiling(harvestlength/7)),
"Rip Out"
),
envir = .GlobalEnv)
if (exists("plants")) {
if (!(is.element(stringer_bell, plants))) {
plants <<- c(plants, plant_name)
}
}
else {
plants <<- c(stringer_bell)
}
}
add_beds <- function(number_of_beds) {
if (!(exists("bedcount", envir = .GlobalEnv))) {
for (i in 1:number_of_beds) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)
}
bedcount <<- number_of_beds
}
else {
for (i in (bedcount + 1):(bedcount+number_of_beds)) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)}
bedcount <<- bedcount + number_of_beds
}
}
add_beds(100)
add_plant("tomato", 80, 50)
add_plant("eggplant", 100, 50)
add_plant("squash", 67, 50)
add_plant("squash", 67, 50)
add_plant <- function (plant_name, daystoharvest, harvestlength) {
stringer_bell = toString(plant_name)
assign(stringer_bell,
c("Plant",
rep("Maintain",ceiling(daystoharvest/7)),
rep("Harvest", ceiling(harvestlength/7)),
"Rip Out"
),
envir = .GlobalEnv)
if (exists("plants")) {
if (!(is.element(stringer_bell, plants))) {
plants <<- c(plants, plant_name)
}
}
else {
plants <<- c(stringer_bell)
}
}
add_beds <- function(number_of_beds) {
if (!(exists("bedcount", envir = .GlobalEnv))) {
for (i in 1:number_of_beds) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)
}
bedcount <<- number_of_beds
}
else {
for (i in (bedcount + 1):(bedcount+number_of_beds)) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)}
bedcount <<- bedcount + number_of_beds
}
}
add_beds(100)
add_plant("tomato", 80, 50)
add_plant("eggplant", 100, 50)
add_plant("squash", 67, 50)
add_plant("squash", 67, 50)
bedcount
paste("bed",toString(10),sep="_")
?parse
parse("bed_10")
eval(parse("tomato"))
eval(parse("bed_10"))
parse("tomato")
x <- 42
eval(parse("x"))
?eval
?rbind
setwd("C:\\Users\\Sean\\Documents\\Fantasy\\Fantasy Baseball 2015")
source("valuecalculator.R")
source("leaguesetup.R")
source("draftpicks.R")
source("mergeinprojections.R")
source("calculatestandings.R")
source("csvwriter.R")
standings
setwd("C:\\Users\\Sean\\Documents\\Fantasy\\Fantasy Baseball 2015")
source("valuecalculator.R")
source("leaguesetup.R")
source("draftpicks.R")
source("mergeinprojections.R")
source("calculatestandings.R")
source("csvwriter.R")
standings
setwd("C:\\Users\\Sean\\Documents\\Fantasy\\Fantasy Baseball 2015")
source("valuecalculator.R")
source("leaguesetup.R")
source("draftpicks.R")
source("mergeinprojections.R")
source("calculatestandings.R")
source("csvwriter.R")
standings
positions
temp$rosterspot
marmaduke$rosterspot
marmaduke
setwd("C:\\Users\\Sean\\Documents\\Fantasy\\Fantasy Baseball 2015")
source("valuecalculator.R")
source("leaguesetup.R")
source("draftpicks.R")
source("mergeinprojections.R")
source("calculatestandings.R")
source("csvwriter.R")
standings
View(balco)
?rownames
setwd("C:\\Users\\Sean\\Documents\\Fantasy\\Fantasy Baseball 2015")
source("valuecalculator.R")
source("leaguesetup.R")
source("draftpicks.R")
source("mergeinprojections.R")
source("calculatestandings.R")
source("csvwriter.R")
standings
setwd("C:\\Users\\Sean\\Documents\\Fantasy\\Fantasy Baseball 2015")
source("valuecalculator.R")
source("leaguesetup.R")
source("draftpicks.R")
source("mergeinprojections.R")
source("calculatestandings.R")
source("csvwriter.R")
standings
---
title: "Fantasy Baseball 2015"
author: "Team Marmaduke"
date: "Monday, January 19, 2015"
output: html_document
---
``` {r echo = FALSE}
setwd("C:\\Users\\Sean\\Documents\\Fantasy\\Fantasy Baseball 2015")
source("valuecalculator.R")
source("leaguesetup.R")
source("draftpicks.R")
source("mergeinprojections.R")
source("calculatestandings.R")
source("csvwriter.R")
```
#Current Standings
```{r, echo=FALSE}
standings
```
setwd("C:\\Users\\Sean\\Documents\\Fantasy\\Fantasy Baseball 2015")
source("valuecalculator.R")
source("leaguesetup.R")
source("draftpicks.R")
source("mergeinprojections.R")
source("calculatestandings.R")
source("csvwriter.R")
setwd("C:\\Users\\Sean\\Documents\\Fantasy\\Fantasy Baseball 2015")
source("valuecalculator.R")
source("leaguesetup.R")
source("draftpicks.R")
source("mergeinprojections.R")
source("calculatestandings.R")
source("csvwriter.R")
standings
setwd("C:\\Users\\Sean\\Documents\\Fantasy\\Fantasy Baseball 2015")
source("valuecalculator.R")
source("leaguesetup.R")
source("draftpicks.R")
source("mergeinprojections.R")
source("calculatestandings.R")
source("csvwriter.R")
standings
setwd("C:\\Users\\Sean\\Documents\\Fantasy\\Fantasy Baseball 2015")
source("valuecalculator.R")
source("leaguesetup.R")
source("draftpicks.R")
source("mergeinprojections.R")
source("calculatestandings.R")
source("csvwriter.R")
standings
source('~/.active-rstudio-document', echo=TRUE)
standings
rownames
setwd("C:\\Users\\Sean\\Documents\\Fantasy\\Fantasy Baseball 2015")
source("valuecalculator.R")
source("leaguesetup.R")
source("draftpicks.R")
source("mergeinprojections.R")
source("calculatestandings.R")
source("csvwriter.R")
standings
source('~/.active-rstudio-document', echo=TRUE)
positions
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
marmaduke
source("mergeinprojections.R")
setwd("C:\\Users\\Sean\\Documents\\Fantasy\\Fantasy Baseball 2015")
source("valuecalculator.R")
source("leaguesetup.R")
source("draftpicks.R")
source("mergeinprojections.R")
source("calculatestandings.R")
source("csvwriter.R")
source('~/.active-rstudio-document', echo=TRUE)
marmaduke
source('~/.active-rstudio-document', echo=TRUE)
marmaduke
source('~/.active-rstudio-document', echo=TRUE)
ottawa
names[marmaduke]
names(marmaduke)
source('~/.active-rstudio-document', echo=TRUE)
marmaduke
