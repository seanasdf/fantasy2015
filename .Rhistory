add_plant <- function (plant_name, daystoharvest, harvestlength) {
stringer_bell = toString(plant_name)
assign(stringer_bell,
c("Plant",
rep("Maintain",ceiling(daystoharvest/7)),
rep("Harvest", ceiling(harvestlength/7)),
"Rip Out"
),
envir = .GlobalEnv)
if (exists("plants")) {
if (!(is.element(stringer_bell, plants))) {
plants <<- c(plants, plant_name)
}
}
else {
plants <<- c(stringer_bell)
}
}
add_beds <- function(number_of_beds) {
if (!(exists("bed_count", envir = .GlobalEnv))) {
for (i in 1:number_of_beds) {
assign(paste("bed_",as.string(i),sep=""),
"",
envir = .GlobalEnv
)
}
bedcount <<- number_of_beds
}
else {bedcount <<- bedcount + number_of_beds}
}
add_beds(100)
add_plant("tomato", 80, 50)
add_plant("eggplant", 100, 50)
add_plant("squash", 67, 50)
add_plant("squash", 67, 50)
as.string
?as.String
tostring
?tostring
add_plant <- function (plant_name, daystoharvest, harvestlength) {
stringer_bell = toString(plant_name)
assign(stringer_bell,
c("Plant",
rep("Maintain",ceiling(daystoharvest/7)),
rep("Harvest", ceiling(harvestlength/7)),
"Rip Out"
),
envir = .GlobalEnv)
if (exists("plants")) {
if (!(is.element(stringer_bell, plants))) {
plants <<- c(plants, plant_name)
}
}
else {
plants <<- c(stringer_bell)
}
}
add_beds <- function(number_of_beds) {
if (!(exists("bed_count", envir = .GlobalEnv))) {
for (i in 1:number_of_beds) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)
}
bedcount <<- number_of_beds
}
else {bedcount <<- bedcount + number_of_beds}
}
add_beds(100)
add_plant("tomato", 80, 50)
add_plant("eggplant", 100, 50)
add_plant("squash", 67, 50)
add_plant("squash", 67, 50)
add_plant <- function (plant_name, daystoharvest, harvestlength) {
stringer_bell = toString(plant_name)
assign(stringer_bell,
c("Plant",
rep("Maintain",ceiling(daystoharvest/7)),
rep("Harvest", ceiling(harvestlength/7)),
"Rip Out"
),
envir = .GlobalEnv)
if (exists("plants")) {
if (!(is.element(stringer_bell, plants))) {
plants <<- c(plants, plant_name)
}
}
else {
plants <<- c(stringer_bell)
}
}
add_beds <- function(number_of_beds) {
if (!(exists("bed_count", envir = .GlobalEnv))) {
for (i in 1:number_of_beds) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)
}
bedcount <<- number_of_beds
}
else {
for (i in (bed_count + 1):(bed_count+number_of_beds)) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)
}
bedcount <<- bedcount + number_of_beds}
}
add_beds(100)
add_plant("tomato", 80, 50)
add_plant("eggplant", 100, 50)
add_plant("squash", 67, 50)
add_plant("squash", 67, 50)
bedcount
add_plant <- function (plant_name, daystoharvest, harvestlength) {
stringer_bell = toString(plant_name)
assign(stringer_bell,
c("Plant",
rep("Maintain",ceiling(daystoharvest/7)),
rep("Harvest", ceiling(harvestlength/7)),
"Rip Out"
),
envir = .GlobalEnv)
if (exists("plants")) {
if (!(is.element(stringer_bell, plants))) {
plants <<- c(plants, plant_name)
}
}
else {
plants <<- c(stringer_bell)
}
}
add_beds <- function(number_of_beds) {
if (!(exists("bed_count", envir = .GlobalEnv))) {
for (i in 1:number_of_beds) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)
}
bedcount <<- number_of_beds
}
else {
for (i in (bed_count + 1):(bed_count+number_of_beds)) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)}
bedcount <<- bedcount + number_of_beds
}
}
add_beds(100)
add_plant("tomato", 80, 50)
add_plant("eggplant", 100, 50)
add_plant("squash", 67, 50)
add_plant("squash", 67, 50)
bedcount
add_plant <- function (plant_name, daystoharvest, harvestlength) {
stringer_bell = toString(plant_name)
assign(stringer_bell,
c("Plant",
rep("Maintain",ceiling(daystoharvest/7)),
rep("Harvest", ceiling(harvestlength/7)),
"Rip Out"
),
envir = .GlobalEnv)
if (exists("plants")) {
if (!(is.element(stringer_bell, plants))) {
plants <<- c(plants, plant_name)
}
}
else {
plants <<- c(stringer_bell)
}
}
add_beds <- function(number_of_beds) {
if (!(exists("bed_count", envir = .GlobalEnv))) {
for (i in 1:number_of_beds) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)
}
bedcount <<- number_of_beds
}
else {
for (i in (bed_count + 1):(bed_count+number_of_beds)) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)}
bedcount <<- bedcount + number_of_beds
}
}
add_beds(100)
add_plant("tomato", 80, 50)
add_plant("eggplant", 100, 50)
add_plant("squash", 67, 50)
add_plant("squash", 67, 50)
add_beds(20)
exists("bed_count",envir = .GlobalEnv)
bed_count
bedcount
add_plant <- function (plant_name, daystoharvest, harvestlength) {
stringer_bell = toString(plant_name)
assign(stringer_bell,
c("Plant",
rep("Maintain",ceiling(daystoharvest/7)),
rep("Harvest", ceiling(harvestlength/7)),
"Rip Out"
),
envir = .GlobalEnv)
if (exists("plants")) {
if (!(is.element(stringer_bell, plants))) {
plants <<- c(plants, plant_name)
}
}
else {
plants <<- c(stringer_bell)
}
}
add_beds <- function(number_of_beds) {
if (!(exists("bedcount", envir = .GlobalEnv))) {
for (i in 1:number_of_beds) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)
}
bedcount <<- number_of_beds
}
else {
for (i in (bedcount + 1):(bed_count+number_of_beds)) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)}
bedcount <<- bedcount + number_of_beds
}
}
add_beds(100)
add_plant("tomato", 80, 50)
add_plant("eggplant", 100, 50)
add_plant("squash", 67, 50)
add_plant("squash", 67, 50)
add_plant <- function (plant_name, daystoharvest, harvestlength) {
stringer_bell = toString(plant_name)
assign(stringer_bell,
c("Plant",
rep("Maintain",ceiling(daystoharvest/7)),
rep("Harvest", ceiling(harvestlength/7)),
"Rip Out"
),
envir = .GlobalEnv)
if (exists("plants")) {
if (!(is.element(stringer_bell, plants))) {
plants <<- c(plants, plant_name)
}
}
else {
plants <<- c(stringer_bell)
}
}
add_beds <- function(number_of_beds) {
if (!(exists("bedcount", envir = .GlobalEnv))) {
for (i in 1:number_of_beds) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)
}
bedcount <<- number_of_beds
}
else {
for (i in (bedcount + 1):(bedcount+number_of_beds)) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)}
bedcount <<- bedcount + number_of_beds
}
}
add_beds(100)
add_plant("tomato", 80, 50)
add_plant("eggplant", 100, 50)
add_plant("squash", 67, 50)
add_plant("squash", 67, 50)
add_plant <- function (plant_name, daystoharvest, harvestlength) {
stringer_bell = toString(plant_name)
assign(stringer_bell,
c("Plant",
rep("Maintain",ceiling(daystoharvest/7)),
rep("Harvest", ceiling(harvestlength/7)),
"Rip Out"
),
envir = .GlobalEnv)
if (exists("plants")) {
if (!(is.element(stringer_bell, plants))) {
plants <<- c(plants, plant_name)
}
}
else {
plants <<- c(stringer_bell)
}
}
add_beds <- function(number_of_beds) {
if (!(exists("bedcount", envir = .GlobalEnv))) {
for (i in 1:number_of_beds) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)
}
bedcount <<- number_of_beds
}
else {
for (i in (bedcount + 1):(bedcount+number_of_beds)) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)}
bedcount <<- bedcount + number_of_beds
}
}
add_beds(100)
add_plant("tomato", 80, 50)
add_plant("eggplant", 100, 50)
add_plant("squash", 67, 50)
add_plant("squash", 67, 50)
bedcount
add_plant <- function (plant_name, daystoharvest, harvestlength) {
stringer_bell = toString(plant_name)
assign(stringer_bell,
c("Plant",
rep("Maintain",ceiling(daystoharvest/7)),
rep("Harvest", ceiling(harvestlength/7)),
"Rip Out"
),
envir = .GlobalEnv)
if (exists("plants")) {
if (!(is.element(stringer_bell, plants))) {
plants <<- c(plants, plant_name)
}
}
else {
plants <<- c(stringer_bell)
}
}
add_beds <- function(number_of_beds) {
if (!(exists("bedcount", envir = .GlobalEnv))) {
for (i in 1:number_of_beds) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)
}
bedcount <<- number_of_beds
}
else {
for (i in (bedcount + 1):(bedcount+number_of_beds)) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)}
bedcount <<- bedcount + number_of_beds
}
}
add_beds(100)
add_plant("tomato", 80, 50)
add_plant("eggplant", 100, 50)
add_plant("squash", 67, 50)
add_plant("squash", 67, 50)
add_plant <- function (plant_name, daystoharvest, harvestlength) {
stringer_bell = toString(plant_name)
assign(stringer_bell,
c("Plant",
rep("Maintain",ceiling(daystoharvest/7)),
rep("Harvest", ceiling(harvestlength/7)),
"Rip Out"
),
envir = .GlobalEnv)
if (exists("plants")) {
if (!(is.element(stringer_bell, plants))) {
plants <<- c(plants, plant_name)
}
}
else {
plants <<- c(stringer_bell)
}
}
add_beds <- function(number_of_beds) {
if (!(exists("bedcount", envir = .GlobalEnv))) {
for (i in 1:number_of_beds) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)
}
bedcount <<- number_of_beds
}
else {
for (i in (bedcount + 1):(bedcount+number_of_beds)) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)}
bedcount <<- bedcount + number_of_beds
}
}
add_beds(100)
add_plant("tomato", 80, 50)
add_plant("eggplant", 100, 50)
add_plant("squash", 67, 50)
add_plant("squash", 67, 50)
add_plant <- function (plant_name, daystoharvest, harvestlength) {
stringer_bell = toString(plant_name)
assign(stringer_bell,
c("Plant",
rep("Maintain",ceiling(daystoharvest/7)),
rep("Harvest", ceiling(harvestlength/7)),
"Rip Out"
),
envir = .GlobalEnv)
if (exists("plants")) {
if (!(is.element(stringer_bell, plants))) {
plants <<- c(plants, plant_name)
}
}
else {
plants <<- c(stringer_bell)
}
}
add_beds <- function(number_of_beds) {
if (!(exists("bedcount", envir = .GlobalEnv))) {
for (i in 1:number_of_beds) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)
}
bedcount <<- number_of_beds
}
else {
for (i in (bedcount + 1):(bedcount+number_of_beds)) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)}
bedcount <<- bedcount + number_of_beds
}
}
add_beds(100)
add_plant("tomato", 80, 50)
add_plant("eggplant", 100, 50)
add_plant("squash", 67, 50)
add_plant("squash", 67, 50)
bedcount
paste("bed",toString(10),sep="_")
?parse
parse("bed_10")
eval(parse("tomato"))
eval(parse("bed_10"))
parse("tomato")
x <- 42
eval(parse("x"))
?eval
?count
source('~/.active-rstudio-document', echo=TRUE)
marmaduke
sum(marmaduke$Name == "")
sum(marmaduke$Name == "")
rownames(marmaduke)
sum(marmaduke$name[1:25])
sum(marmaduke$name[1:25] == "")
marmaduke$name[1:25]
marmaduke$Name
marmaduke$Name[1:25]
marmaduke$Name[1:25]
sum(marmaduke$Name[1:25] == "")
source('~/.active-rstudio-document', echo=TRUE)
standings
names(standings)
names(standings[14])
setwd("C:\\Users\\Sean\\Documents\\Fantasy\\Fantasy Baseball 2015")
if (!(file.exists("hitter_projections.csv") & file.exists("pitcher_projections.csv"))) {
source("valuecalculator.R")
} else {
hitter_projections <- read.csv("hitter_projections.csv", stringsAsFactors = FALSE)
pitcher_projections <- read.csv("pitcher_projections.csv", stringsAsFactors = FALSE)
}
source("leaguesetup.R")
source("draftpicks.R")
source("mergeinprojections.R")
source("calculatestandings.R")
source("csvwriter.R")
standings
pk dodgers
temp <- get("pk dodgers")
temp
standings
names(standings)
names(standings[14]) <- "picks_left"
names(standings[15]) <- "dollars_per_pick"
names(standings)
names(standings[15]) <- blah
names(standings[15]) <- "blah"
names(standings)
names(standings)[15] <- "blah"
names(standings)
